{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/97254/Documents/personal/reason%20labs/app/api/weather/%5Bcity%5D/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\n\r\nexport async function GET(req: NextRequest, context: { params: { city: string } }) {\r\n  const { city } =  await context.params;  \r\n  const apiKey = process.env.NEXT_PUBLIC_API_KEY;\r\n\r\n  if (!city) {\r\n    return NextResponse.json({ error: \"City name is required\" }, { status: 400 });\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apiKey}`\r\n    );\r\n\r\n    if (!response.ok) throw new Error(\"Failed to fetch weather data\");\r\n\r\n    const data = await response.json();\r\n    const formattedData = {\r\n      temperature: data.main.temp,\r\n      humidity: data.main.humidity,\r\n      windSpeed: data.wind.speed,\r\n      feelsLike: data.main.feels_like,\r\n      description: data.weather[0].description,\r\n    };\r\n\r\n    return NextResponse.json(formattedData, { status: 200 });\r\n  } catch (error) {\r\n    return NextResponse.json({ error: (error as Error).message }, { status: 500 });\r\n  }\r\n}"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,IAAI,GAAgB,EAAE,OAAqC;IAC/E,MAAM,EAAE,IAAI,EAAE,GAAI,MAAM,QAAQ,MAAM;IACtC,MAAM;IAEN,IAAI,CAAC,MAAM;QACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;IAEA,IAAI;QACF,MAAM,WAAW,MAAM,MACrB,CAAC,kDAAkD,EAAE,KAAK,oBAAoB,EAAE,QAAQ;QAG1F,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;QAElC,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,MAAM,gBAAgB;YACpB,aAAa,KAAK,IAAI,CAAC,IAAI;YAC3B,UAAU,KAAK,IAAI,CAAC,QAAQ;YAC5B,WAAW,KAAK,IAAI,CAAC,KAAK;YAC1B,WAAW,KAAK,IAAI,CAAC,UAAU;YAC/B,aAAa,KAAK,OAAO,CAAC,EAAE,CAAC,WAAW;QAC1C;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,eAAe;YAAE,QAAQ;QAAI;IACxD,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,AAAC,MAAgB,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACF"}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}